name: "Extracting values and logging"

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'    # every day at midnight

env:
  IMAGE_NAME_STAGE: air-analytics-dump:stage
  IMAGE_NAME_PROD: air-analytics-dump:prod

jobs:
  extract-names:
    runs-on: ubuntu-latest

    steps:
        - name: 'Check net 7'
          uses: actions/setup-dotnet@v2
          with:
            dotnet-version: 7.x

        - name: Fetch possible Stage-route through TestBB-lookup
          id: http-request-stage
          run: |
              response=$(curl -s "https://cloud.caspeco.se/.where?system=se_broupp")
              echo "Got response $response"
              echo "DEV_URL=$response" >> $GITHUB_ENV

        - name: Extract Stage branch name
          id: extract-stage-branch
          run: |
              response="${{ env.DEV_URL }}"
              echo "Got response: $response"
              if [[ $response != *"dev-"* ]]; then
              branch_name=$(echo "$response" | awk -F 'marc-|\\.azure' '{print $2}' | grep -oE '[0-9-]+[0-9]')
              echo "I parsed the branch_name: $branch_name"
              echo "BRANCH_NAME_PROD=$branch_name" >> $GITHUB_ENV
              echo "CHECKOUT_FAILED_STAGE=false" >> $GITHUB_ENV
              else
              echo "Branch name not found in $response."
              echo "BRANCH_NAME_STAGE=$branch_name" >> $GITHUB_ENV
              echo "CHECKOUT_FAILED_STAGE=true" >> $GITHUB_ENV
              fi
        - name: Read output
          id: read-output
          run: |           
            printf '%s\n' "$branch_name"
            echo "Branch_Prod: $BRANCH_NAME_PROD"
            echo "Branch_Stage: $BRANCH_NAME_STAGE"
            echo "Failed: $CHECKOUT_FAILED_STAGE"

  use-vars:
    needs: extract-names
    runs-on: ubuntu-latest
        
    steps:
      - name: "print vars"
        id: "print-vars"
        run: |
            echo "prod: $BRANCH_NAME_PROD"
            echo "stage: $BRANCH_NAME_STAGE"
            echo "failed stage: $CHECKOUT_FAILED_STAGE"
